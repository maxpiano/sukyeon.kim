{"version":3,"sources":["radialplayer.js"],"names":["RadialPlayer","HTMLElement","stroke","getAttribute","radius","normalizedRadius","_circumference","Math","PI","_root","attachShadow","mode","innerHTML","percent","offset","querySelector","style","strokeDashoffset","string","name","oldValue","newValue","setProgress","updateIcon","window","customElements","define"],"mappings":"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","file":"radialplayer.cb837650.js","sourceRoot":"..","sourcesContent":["class RadialPlayer extends HTMLElement {\n  constructor() {\n    super();\n    const stroke = this.getAttribute(\"stroke\");\n    const radius = this.getAttribute(\"radius\");\n    const normalizedRadius = radius - stroke / 2;\n    this._circumference = normalizedRadius * 2 * Math.PI;\n    this._root = this.attachShadow({ mode: \"open\" });\n    this._root.innerHTML = `\n      <link\n        rel=\"stylesheet\"\n        href=\"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.13.0/css/all.min.css\"\n        type=\"text/css\"\n        media=\"all\"\n      />\n      <svg\n        height=\"${radius * 2}\"\n        width=\"${radius * 2}\"\n       >\n         <circle\n           stroke=\"white\"\n           stroke-dasharray=\"${this._circumference} ${this._circumference}\"\n           style=\"stroke-dashoffset:${this._circumference}\"\n           stroke-width=\"${stroke}\"\n           fill=\"transparent\"\n           r=\"${normalizedRadius}\"\n           cx=\"${radius}\"\n           cy=\"${radius}\"\n        />\n      </svg>\n      <button><i class='fas fa-play'></i></button>\n\n      <style>\n        svg {\n          vertical-align: top;\n        }\n\n        circle {\n          transition: stroke-dashoffset 0.35s;\n          transform: rotate(-90deg);\n          transform-origin: 50% 50%;\n        }\n\n        button {\n          z-index: 1;\n          position: absolute;\n          color: #fff;\n          background: transparent;\n          font-size: 3rem;\n          margin: 0;\n          padding: 0;\n          border: 0;\n        }\n\n        button:focus {\n          outline: 0;\n        }\n      </style>\n    `;\n  }\n\n  setProgress(percent) {\n    const offset = this._circumference - (percent / 100) * this._circumference;\n    const circle = this._root.querySelector(\"circle\");\n    circle.style.strokeDashoffset = offset;\n  }\n\n  updateIcon(string) {\n    const icon = this._root.querySelector(\"button\");\n    icon.innerHTML = string;\n  }\n\n  static get observedAttributes() {\n    return [\"progress\", \"icon\"];\n  }\n\n  attributeChangedCallback(name, oldValue, newValue) {\n    if (name === \"progress\") {\n      this.setProgress(newValue);\n    }\n    if (name === \"icon\") {\n      this.updateIcon(newValue);\n    }\n  }\n}\n\nwindow.customElements.define(\"radial-player\", RadialPlayer);\n"]}